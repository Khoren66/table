{"version":3,"sources":["components/TableBody.js","components/TableHeader.js","components/Table.js","pages/TablePage.js","App.js","reportWebVitals.js","index.js"],"names":["TableBody","rowData","rowIndex","onItemClick","headerState","selectedRows","handleSelectRow","map","column","index","undefined","dataIndex","value","checked","name","onChange","e","selected","type","onClick","TableHeader","handleSort","checkAll","handleSelectAll","sortingMode","data","onRemoveItems","menu","Item","width","className","defaultChecked","overlay","placement","arrow","MoreOutlined","style","marginLeft","display","justifyContent","alignItems","title","mode","SortAscendingOutlined","SortDescendingOutlined","Table","headers","onScroll","onFilter","useState","setSelectedRows","setHeaderState","setCheckAll","setSortingMode","useEffect","res","reduce","o","key","target","rows","Object","entries","forEach","k","class","confirm","Modal","Title","Typography","sorter","rate","TablePage","dataRow","setDataRow","getMoreItems","count","offset","Array","from","length","v","scrollHeight","scrollTop","clientHeight","array","Math","max","apply","console","log","prev","fetchMoreData","item","icon","ExclamationCircleOutlined","content","onOk","onCancel","handleShowItem","sorted","sort","a","b","handleSorting","items","filter","el","newDataRow","includes","handleRemoveItems","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"8RAsCeA,EApCG,SAAC,GAOZ,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,+BACE,6BACGF,GACCA,EAAYG,KAAI,SAACC,EAAQC,GAAT,YAC8BC,IAA5CL,EAAaJ,EAAQO,EAAOG,YAC1B,uBACEC,MAAOP,EAAaJ,EAAQO,EAAOG,YACnCE,QAASR,EAAaJ,EAAQO,EAAOG,YACrCG,KAAMb,EAAQO,EAAOG,WACrBI,SAAU,SAACC,GAAD,OAAOV,EAAgBU,EAAGf,EAAQgB,SAAUf,IACtDgB,KAAK,aAGP,QAIPd,GACCA,EAAYG,KAAI,SAACC,EAAQC,GAAT,OACd,oBAAIU,QAAS,kBAAMhB,EAAYF,IAA/B,SACGA,EAAQO,EAAOG,kBApBfT,I,6CC4DEkB,EA/DK,SAAC,GASd,IARLC,EAQI,EARJA,WACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,gBACAnB,EAKI,EALJA,YACAoB,EAII,EAJJA,YAEAnB,GAEI,EAHJoB,KAGI,EAFJpB,cACAqB,EACI,EADJA,cAEMC,EACJ,cAAC,IAAD,UACE,cAAC,IAAKC,KAAN,CAAWT,QAAS,kBAAMO,EAAcrB,IAAxC,SACE,iDADyD,OAM/D,OACE,+BACE,oBAAIwB,MAAM,OAAV,SACE,sBAAKC,UAAU,wBAAf,UACE,uBACEX,QAASI,EACTQ,eAAgBT,EAChBJ,KAAK,aAEP,cAAC,IAAD,CAAUc,QAASL,EAAMM,UAAU,aAAaC,OAAK,EAArD,SACE,cAACC,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,iBAIxCjC,GACCA,EAAYG,KAAI,SAACC,EAAQC,GAAT,OACd,oBAAIoB,MAAOrB,EAAOqB,MAAQ,KAAMpB,MAAOA,EAAvC,SACE,sBACE2B,MAAO,CACLE,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAJhB,UAOE,+BAAOhC,EAAOiC,QACbjC,EAAM,OACgB,QAArBgB,EAAYkB,KACV,cAACC,EAAA,EAAD,CACExB,QAAS,kBAAME,EAAWb,EAAOG,UAAW,UAG9C,cAACiC,EAAA,EAAD,CACEzB,QAAS,kBAAME,EAAWb,EAAOG,UAAW,WAIhD,eCuBDkC,EAhFD,SAAC,GAOR,IANLC,EAMI,EANJA,QACArB,EAKI,EALJA,KACAsB,EAII,EAJJA,SACA5C,EAGI,EAHJA,YACA6C,EAEI,EAFJA,SACAtB,EACI,EADJA,cAEA,EAAwCuB,mBAAS,IAAjD,mBAAO5C,EAAP,KAAqB6C,EAArB,KACA,EAAsCD,mBAAS,IAA/C,mBAAO7C,EAAP,KAAoB+C,EAApB,KACA,EAAgCF,oBAAS,GAAzC,mBAAO3B,EAAP,KAAiB8B,EAAjB,KACA,EAAsCH,mBAAS,CAC7CP,KAAM,MACNlC,OAASsC,EAAQ,IAAMA,EAAQ,GAAGnC,WAAc,KAFlD,mBAAOa,EAAP,KAAoB6B,EAApB,KAKAC,qBAAU,WACR,IAAIC,EAAM9B,EAAK+B,QAAO,SAACC,EAAGC,GAAJ,mBAAC,eAAiBD,GAAlB,kBAAsBC,EAAI5C,MAAO,MAAU,IACjEoC,EAAgBK,GAChBJ,EAAeL,KACd,CAACrB,IAEJ,IASMnB,EAAkB,SAACU,GACvB,MAA0BA,EAAE2C,OAApB7C,EAAR,EAAQA,KAAMD,EAAd,EAAcA,QACdR,EAAaS,GAAQD,EACrBqC,EAAgB,2BAAK7C,GAAN,kBAAqBA,EAAaS,GAAQD,MAY3D,OACE,qBAAKiB,UAAU,cAAciB,SAAU,SAAC/B,GAAD,OAAO+B,EAAS/B,IAAvD,SACE,wBAAOc,UAAU,UAAjB,UACE,gCACE,cAAC,EAAD,CACEJ,cAAeA,EACfL,WAfS,SAACb,EAAQkC,GAExBW,EADW,QAATX,EACa,CAAEA,KAAM,OAAQlC,OAAQA,GAExB,CAAEkC,KAAM,MAAOlC,OAAQA,IAExCwC,EAASxB,EAAahB,IAUdgB,YAAaA,EACbD,gBAhCc,WACtB6B,GAAa9B,GACb,IAAIsC,EAAI,eAAQvD,GAChBwD,OAAOC,QAAQF,GAAMG,SAAQ,YAAa,IAAD,mBAAVC,EAAU,UACPJ,EAAKI,IAApC1C,KAEH4B,EAAgBU,IA2BRtC,SAAUA,EACVjB,aAAcA,EACdoB,KAAMA,EACNrB,YAAaA,MAGjB,gCACGqB,GACCA,EAAKlB,KAAI,SAACN,EAASC,GAAV,OACP,cAAC,EAAD,CACE+D,MAAM,aACNhE,QAASA,EACTI,aAAcA,EACdH,SAAUA,EACVE,YAAaA,EACbE,gBAAiBA,EACjBH,YAAaA,e,0BCxErB+D,EAAYC,IAAZD,QACAE,EAAUC,IAAVD,MAEFtB,EAAU,CACd,CACEnC,UAAW,OACX8B,MAAO,OACPZ,MAAO,IACPyC,QAAQ,GAEV,CACE3D,UAAW,OACX8B,MAAO,SACPZ,MAAO,IACPyC,QAAQ,IAIN7C,EAAO,CACX,CACEX,KAAM,MACNyD,KAAM,KAER,CACEzD,KAAM,UACNyD,KAAM,KAER,CACEzD,KAAM,OACNyD,KAAM,IAER,CACEA,KAAM,IACNzD,KAAM,SAER,CACEA,KAAM,OACNyD,KAAM,KAER,CACEzD,KAAM,WACNyD,KAAM,KAER,CACEzD,KAAM,OACNyD,KAAM,IAER,CACEA,KAAM,IACNzD,KAAM,SAER,CACEA,KAAM,OACNyD,KAAM,KAER,CACEzD,KAAM,WACNyD,KAAM,KAER,CACEzD,KAAM,OACNyD,KAAM,IAER,CACEA,KAAM,IACNzD,KAAM,UAER,CACEyD,KAAM,IACNzD,KAAM,UAyFK0D,EArFG,WAChB,MAA8BvB,mBAASxB,GAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAACC,GAAuB,IAAhBC,EAAe,uDAAN,EACpC,OAAOC,MAAMC,KAAK,CAAEC,OAAQJ,IAAS,SAACK,EAAGjB,GAAJ,OAAUA,KAAGzD,KAAI,SAACyD,GAAD,MAAQ,CAC5DlD,KAAK,OAAD,OAASkD,EAAIa,GACjBN,KAAMP,EAAIa,OAgEd,OACE,sBAAK/C,UAAU,aAAf,UACE,cAACsC,EAAD,2BACA,cAAC,EAAD,CACEtB,QAASA,EACTrB,KAAMgD,EACN1B,SAAU,SAAC/B,GAAD,OAlCM,SAACA,GAGrB,GADEA,EAAE2C,OAAOuB,aAAelE,EAAE2C,OAAOwB,YAAcnE,EAAE2C,OAAOyB,aAC9C,CACV,IAAIC,EAAK,YAAOZ,GACVI,EACJS,KAAKC,IAAIC,MACPF,KACAD,EAAM9E,KAAI,SAACkD,GAAD,OAAOA,EAAEc,SACjB,EACA9C,EACJoD,KAAW,IAAYF,EAAa,GAAIE,GAAUF,EAAa,IACjEc,QAAQC,IAAIjE,GACZiD,GAAW,SAACiB,GAAD,4BAAcA,GAAd,YAAuBlE,QAqBfmE,CAAc5E,IAC/Bb,YAAa,SAAC0F,GAAD,OAlBI,SAACA,GACtB3B,EAAQ,CACNzB,MAAO,sCACPqD,KAAM,cAACC,EAAA,EAAD,IACNC,QAAQ,UAAD,OAAYH,EAAK/E,KAAjB,mBAAgC+E,EAAKtB,KAArC,KACP0B,KAJM,aAKNC,SALM,WAMJT,QAAQC,IAAI,aAWWS,CAAeN,IACtC7C,SAAU,SAACxB,EAAahB,GAAd,OApEM,SAACgB,EAAahB,GAClC,IACI4F,EADS,YAAO3B,GACG4B,MAAK,SAACC,EAAGC,GAC9B,OAAID,EAAE9F,GAAU+F,EAAE/F,GACY,QAArBgB,EAAYkB,MAAkB,EAAI,EAEvC4D,EAAE9F,GAAU+F,EAAE/F,GACY,QAArBgB,EAAYkB,KAAiB,GAAK,EAEpC,KAETgC,EAAW0B,GAyD4BI,CAAchF,EAAahB,IAC9DkB,cAAe,SAAC+E,GAAD,OAxDK,SAACA,GACzB,IAAIxF,EAAWwD,EAAQiC,QAAO,SAACC,GAAD,OAA2B,IAAnBF,EAAME,EAAG7F,SAC3C8F,EAAanC,EAAQiC,QAAO,SAACb,GAAD,OAAW5E,EAAS4F,SAAShB,MAC7D3B,EAAQ,CACNzB,MAAO,CACLxB,EAAS+D,OAAS,EACd,qCACA,0BAENc,KAAM,cAACC,EAAA,EAAD,IACNE,KAPM,WAQJ,OAAOhF,EAAS+D,OAAS,EAAIN,EAAWkC,GAAc,IAExDV,SAVM,WAWJT,QAAQC,IAAI,aA0CcoB,CAAkBL,UC3IrCM,MAZf,WACE,OACE,qBAAKjF,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,SAAD,UACE,cAAC,QAAD,CAAOkF,OAAK,EAACC,KAAK,SAASC,UAAW1C,WCEjC2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCEdQ,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,SAAzB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.210102d6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TableBody = ({\n  rowData,\n  rowIndex,\n  onItemClick,\n  headerState,\n  selectedRows,\n  handleSelectRow,\n}) => {\n  return (\n    <tr key={rowIndex}>\n      <td>\n        {headerState &&\n          headerState.map((column, index) =>\n            selectedRows[rowData[column.dataIndex]] !== undefined ? (\n              <input\n                value={selectedRows[rowData[column.dataIndex]]}\n                checked={selectedRows[rowData[column.dataIndex]]}\n                name={rowData[column.dataIndex]}\n                onChange={(e) => handleSelectRow(e, rowData.selected, rowIndex)}\n                type=\"checkbox\"\n              ></input>\n            ) : (\n              \"\"\n            )\n          )}\n      </td>\n      {headerState &&\n        headerState.map((column, index) => (\n          <td onClick={() => onItemClick(rowData)}>\n            {rowData[column.dataIndex]}\n          </td>\n        ))}\n    </tr>\n  );\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport {\n  MoreOutlined,\n  SortDescendingOutlined,\n  SortAscendingOutlined,\n} from \"@ant-design/icons\";\nimport { Menu, Dropdown } from \"antd\";\n\nconst TableHeader = ({\n  handleSort,\n  checkAll,\n  handleSelectAll,\n  headerState,\n  sortingMode,\n  data,\n  selectedRows,\n  onRemoveItems,\n}) => {\n  const menu = (\n    <Menu>\n      <Menu.Item onClick={() => onRemoveItems(selectedRows)} key=\"1\">\n        <a>Remove Selected</a>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <tr>\n      <th width=\"15px\">\n        <div className=\"table-header-checkbox\">\n          <input\n            onClick={handleSelectAll}\n            defaultChecked={checkAll}\n            type=\"checkbox\"\n          ></input>\n          <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\n            <MoreOutlined style={{ marginLeft: \"20px\" }} />\n          </Dropdown>\n        </div>\n      </th>\n      {headerState &&\n        headerState.map((column, index) => (\n          <th width={column.width + \"px\"} index={index}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <span>{column.title}</span>\n              {column[\"sorter\"] ? (\n                sortingMode.mode === \"asc\" ? (\n                  <SortAscendingOutlined\n                    onClick={() => handleSort(column.dataIndex, \"asc\")}\n                  />\n                ) : (\n                  <SortDescendingOutlined\n                    onClick={() => handleSort(column.dataIndex, \"desc\")}\n                  />\n                )\n              ) : (\n                \"\"\n              )}\n            </div>\n          </th>\n        ))}\n    </tr>\n  );\n};\n\nexport default TableHeader;\n","import React, { useEffect, useState } from \"react\";\nimport \"./table.css\";\nimport TableBody from \"./TableBody\";\nimport TableHeader from \"./TableHeader\";\n\nconst Table = ({\n  headers,\n  data,\n  onScroll,\n  onItemClick,\n  onFilter,\n  onRemoveItems,\n}) => {\n  const [selectedRows, setSelectedRows] = useState({});\n  const [headerState, setHeaderState] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n  const [sortingMode, setSortingMode] = useState({\n    mode: \"asc\",\n    column: (headers[0] && headers[0].dataIndex) || \"\",\n  });\n\n  useEffect(() => {\n    let res = data.reduce((o, key) => ({ ...o, [key.name]: false }), {});\n    setSelectedRows(res);\n    setHeaderState(headers);\n  }, [data]);\n\n  const handleSelectAll = () => {\n    setCheckAll(!checkAll);\n    let rows = { ...selectedRows };\n    Object.entries(rows).forEach(([k, v]) => {\n      !checkAll ? (rows[k] = true) : (rows[k] = false);\n    });\n    setSelectedRows(rows);\n  };\n\n  const handleSelectRow = (e) => {\n    const { name, checked } = e.target;\n    selectedRows[name] = checked;\n    setSelectedRows({ ...selectedRows, [selectedRows[name]]: checked });\n  };\n\n  const handleSort = (column, mode) => {\n    if (mode === \"asc\") {\n      setSortingMode({ mode: \"desc\", column: column });\n    } else {\n      setSortingMode({ mode: \"asc\", column: column });\n    }\n    onFilter(sortingMode, column);\n  };\n\n  return (\n    <div className=\"table-style\" onScroll={(e) => onScroll(e)}>\n      <table className=\"mytable\">\n        <thead>\n          <TableHeader\n            onRemoveItems={onRemoveItems}\n            handleSort={handleSort}\n            sortingMode={sortingMode}\n            handleSelectAll={handleSelectAll}\n            checkAll={checkAll}\n            selectedRows={selectedRows}\n            data={data}\n            headerState={headerState}\n          />\n        </thead>\n        <tbody>\n          {data &&\n            data.map((rowData, rowIndex) => (\n              <TableBody\n                class=\"tabel-body\"\n                rowData={rowData}\n                selectedRows={selectedRows}\n                rowIndex={rowIndex}\n                headerState={headerState}\n                handleSelectRow={handleSelectRow}\n                onItemClick={onItemClick}\n              />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport Table from \"../components/Table\";\nimport { Typography, Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nconst { confirm } = Modal;\nconst { Title } = Typography;\n\nconst headers = [\n  {\n    dataIndex: \"name\",\n    title: \"Name\",\n    width: 320,\n    sorter: true,\n  },\n  {\n    dataIndex: \"rate\",\n    title: \"Rating\",\n    width: 320,\n    sorter: true,\n  },\n];\n\nconst data = [\n  {\n    name: \"Vue\",\n    rate: 130,\n  },\n  {\n    name: \"Angular\",\n    rate: 110,\n  },\n  {\n    name: \"Ruby\",\n    rate: 90,\n  },\n  {\n    rate: 120,\n    name: \"React\",\n  },\n  {\n    name: \"Vue1\",\n    rate: 130,\n  },\n  {\n    name: \"Angular1\",\n    rate: 110,\n  },\n  {\n    name: \"PHP1\",\n    rate: 90,\n  },\n  {\n    rate: 120,\n    name: \"Reac1\",\n  },\n  {\n    name: \"Vue2\",\n    rate: 130,\n  },\n  {\n    name: \"Angular2\",\n    rate: 110,\n  },\n  {\n    name: \"PHP2\",\n    rate: 90,\n  },\n  {\n    rate: 120,\n    name: \"React2\",\n  },\n  {\n    rate: 120,\n    name: \"Reac3\",\n  },\n];\n\nconst TablePage = () => {\n  const [dataRow, setDataRow] = useState(data);\n\n  const getMoreItems = (count, offset = 1) => {\n    return Array.from({ length: count }, (v, k) => k).map((k) => ({\n      name: `NAME${k + offset}`,\n      rate: k + offset,\n    }));\n  };\n\n  const handleSorting = (sortingMode, column) => {\n    let notSorted = [...dataRow];\n    let sorted = notSorted.sort((a, b) => {\n      if (a[column] < b[column]) {\n        return sortingMode.mode === \"asc\" ? -1 : 1;\n      }\n      if (a[column] > b[column]) {\n        return sortingMode.mode === \"asc\" ? 1 : -1;\n      }\n      return 0;\n    });\n    setDataRow(sorted);\n  };\n  const handleRemoveItems = (items) => {\n    let selected = dataRow.filter((el) => items[el.name] === true);\n    let newDataRow = dataRow.filter((item) => !selected.includes(item));\n    confirm({\n      title: [\n        selected.length > 0\n          ? \"Do you Want to delete these items?\"\n          : \"No items are selected!\",\n      ],\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        return selected.length > 0 ? setDataRow(newDataRow) : \"\";\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  const fetchMoreData = (e) => {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      let array = [...dataRow];\n      const offset =\n        Math.max.apply(\n          Math,\n          array.map((o) => o.rate)\n        ) + 1;\n      const data =\n        offset !== -Infinity ? getMoreItems(20, offset) : getMoreItems(20);\n      console.log(data);\n      setDataRow((prev) => [...prev, ...data]);\n    }\n  };\n\n  const handleShowItem = (item) => {\n    confirm({\n      title: \"Here is the item that you selected?\",\n      icon: <ExclamationCircleOutlined />,\n      content: `(Name: ${item.name}, Rate: ${item.rate})`,\n      onOk() {},\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n  return (\n    <div className=\"table-page\">\n      <Title> React Table</Title>\n      <Table\n        headers={headers}\n        data={dataRow}\n        onScroll={(e) => fetchMoreData(e)}\n        onItemClick={(item) => handleShowItem(item)}\n        onFilter={(sortingMode, column) => handleSorting(sortingMode, column)}\n        onRemoveItems={(items) => handleRemoveItems(items)}\n      />\n    </div>\n  );\n};\n\nexport default TablePage;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport TablePage from \"./pages/TablePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/table\" component={TablePage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport BrowserRouter from \"react-router-dom/BrowserRouter\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}